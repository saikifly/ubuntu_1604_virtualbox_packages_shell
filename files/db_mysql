#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          mysql
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      $network $time
# Should-Stop:       $network $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/ Stop MySQL Community Server daemon
# Description:       This service script facilitates startup and shutdown of
#                    mysqld daemon throught its wrapper script mysqld_safe
### END INIT INFO
#
. /lib/lsb/init-functions
cd /
umask 077
STARTTIMEOUT=900
STOPTIMEOUT=300
DB=/data/db_mysql
VERSION=$(/usr/sbin/mysqld --version | grep mysqld | cut -d' ' -f4)

fix_thp_setting() {
	echo "never" > /sys/kernel/mm/transparent_hugepage/defrag
	echo "never" > /sys/kernel/mm/transparent_hugepage/enabled
}

get_running () {
	PIDFILE=${DB}"/mysql.pid"
	if [ -e "$PIDFILE" ] && [ -d "/proc/$(cat "$PIDFILE")" ];
	then
		echo 1
	else
		echo 0
	fi
}

verify_server () {

	TIMEOUT=0
	if [ "${1}" = "start" ];
	then
		TIMEOUT=${STARTTIMEOUT}
	elif [ "${1}" = "stop" ];
	then
		TIMEOUT=${STOPTIMEOUT}
	fi

	COUNT=0
	while [ ${COUNT} -lt ${TIMEOUT} ];
	do
		COUNT=$(( COUNT+1 ))
		echo -n .
		if [ "${1}" = "start" ] && [ "$(get_running)" = 1 ];
		then
			if [ -z ${2} ];
			then
				echo
			fi
			return 0
		fi
		if [ "${1}" = "stop" ] && [ "$(get_running)" = 0 ];
		then
			if [ -z ${2} ];
			then
				echo
			fi
			return 0
		fi
		sleep 1
	done
	return 1
}

case "$1" in
  'start')
	if [ "$(get_running)" -eq 1 ];
	then
		log_action_msg "Percona Server is already started"
	else

		# Needed because of TokuDB
		fix_thp_setting
		su - mysql -s /bin/bash -c "/usr/bin/mysqld_safe --defaults-file=${DB}/my.cnf > /dev/null &"
		verify_server start
		if [ "$?" -eq 0 ];
		then
			log_action_msg "${DB} Percona ${VERSION} is started"
		else
			log_action_msg "${DB} Percona ${VERSION} did not start. Please check logs for more details."
		fi
	fi
	;;

  'stop')
	if [ "$(get_running)" -eq 1 ];
	then
   	    /usr/bin/mysqladmin --defaults-file=${DB}/my.cnf -S ${DB}/mysql.sock -p  shutdown > /dev/null
		verify_server stop
		if [ "$?" -eq 0 ];
		then
			log_action_msg "${DB} Percona ${VERSION} is stopped"
		else
			log_action_msg "Attempt to shutdown ${DB} Percona ${VERSION} timed out"
		fi
	else
		log_action_msg "${DB} Percona ${VERSION} is already stopped"
	fi
	;;

  'restart'|'reload'|'force-reload')
	log_action_msg "Stopping ${DB} Percona ${VERSION}"
	$0 stop
	log_action_msg "Re-starting ${DB} Percona ${VERSION}"
	$0 start
	;;

  'status')
	if [ "$(get_running)" -eq 1 ];
	then
		log_action_msg "${DB} Percona ${VERSION} is running"
	else
		log_action_msg "${DB} Percona ${VERSION} is not running"
		exit 3
	fi
	;;

  *)
	echo "Usage: $SELF start|stop|restart|reload|force-reload|status"
	exit 1
	;;
esac

exit 0

